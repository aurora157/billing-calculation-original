1. Project OverviewObjectiveDevelop a Python application that:* Takes two CSV files as input (Service Breakdown + Usage CSV).* Processes the data and maps specific columns from Service Breakdown.* Generates a third CSV file following the Billing Report Template.* Saves the final file to the Desktop.Key Features* Automated Data Processing: Reads two input CSVs, processes the necessary columns, and formats the output.* Data Mapping: Extracts relevant fields from the Service Breakdown CSV.* Excel Output Formatting: Ensures output matches the Billing Report Template.* Desktop File Saving: Saves the final report in a predefined location.2. Deliverables1. Python Script that processes the input CSVs.2. Final Billing Report in Excel format.3. Folder Structure & Documentation for usage.3. Functional Requirements3.1 Inputs* CSV File 1: Service Breakdown o Maps required columns: * Department ? Cost centre* User ? Name* Number ? Service* Fixed Charges ? Fixed Charges* CSV File 2: Usage Data o Will be used for additional charge calculations.3.2 Output* A new Excel file with the following columns: * Department, User, Number, Fixed Charges, EU Daily Roaming Charges, * RoW Daily Roaming Charges, Daily Rate Roaming, Roaming Calls, * Roaming Data, UK to Abroad, Other Charges, Total, No Usage* The file is saved on the Desktop with a timestamp in its name.4. Technical Implementation4.1 Technology Stack* Python (primary language)* Libraries: o pandas (data processing)o openpyxl (Excel file handling)4.2 Processing Logic1. Load CSV Fileso Read ServicesBreakdown.csvo Read Usage.csv2. Extract Required Columnso Select only necessary fields from Service Breakdown.3. Format Data According to the Templateo Create a structured DataFrame with correct column names.o Ensure data types match expected formats.4. Calculate Additional Charges (if applicable)o Pull additional details from Usage Data if required.5. Export the Final Report to an Excel Fileo Save it to Desktop in .xlsx format.5. Folder StructureCSV-Processor/??? input/              # Folder for input CSVs?   ??? ServiceBreakdown.csv?   ??? Usage.csv??? output/             # Folder for processed files (Optional)??? process_csv.py      # Main script for processing??? README.md           # Instructions for usage